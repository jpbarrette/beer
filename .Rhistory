eq = function(x){x*x}
curve(eq, from=1, to=50, xlab="x", ylab="y")
eq = function(x){log10(x)}
curve(eq, from=1, to=50, xlab="x", ylab="y")
eq = function(x){log10(x)}
curve(eq, from=1, to=50, xlab="x", ylab="y")
library(ggplot2)
funcs <- list(log,function(x) x,function(x) x*log(x),function(x) x^2,  exp)
cols <-heat.colors(5,1)
p <-ggplot()+xlim(c(1,10))+ylim(c(1,10))
for(i in 1:length(funcs))
p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])
print(p)
funcs <- list(log10, log2)
#funcs <- list(log,function(x) x,function(x) x*log(x),function(x) x^2,  exp)
for(i in 1:length(funcs))
p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])
print(p)
funcs <- list(log10, log2)
for(i in 1:length(funcs)) p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])
print(p)
p <- null
p <-ggplot()+xlim(c(1,10))+ylim(c(1,10))
for(i in 1:length(funcs)) p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])
print(p)
funcs <- list(log10, log2, x)
funcs <- list(log10, log2, x^2)
funcs <- list(log10, log2, function(x) x^2)
p <-ggplot()+xlim(c(1,10))+ylim(c(1,10))
for(i in 1:length(funcs)) p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])
print(p)
?read.csv
read.csv("temparature-cave.txt", sep = '\t', skip)
setwd("~/Documents/Projects/beer-brewing")
read.csv("temparature-cave.txt", sep = '\t', skip)
read.csv("temparature-cave.txt", sep = '\t', skip=22)
read.csv("temparature-cave.txt", sep = '\t\t', skip=22)
read.csv("temparature-cave.txt", sep = "\t\t", skip=22)
read.csv("temparature-cave.txt", sep = "\t", skip=22)
read.csv("temparature-cave.txt", sep = "\t", skip=22, encoding="UTF-8")
read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8")
read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)[,[1]]
read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
head(read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE))
import dplyr
library(dplyr)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
d = d %>% select(V1, V3, V5, V7)
read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
d = d %>% select(V1, V3, V5, V7)
head(d)
library(plyr)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
d = rename(d, c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
head(d)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE)
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
head(d)
d[$Time]
d[,$Time]
d[$Time,]
d[[$Time,]]
d %>% mutate(temp = as.POSIXlt(Temperature))
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
str(d)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE, colClasses = c("V3" = "POSIXct"))
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
str(d)
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE, colClasses = c("V3" = "POSIXct"))
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
d %>% mutate(temp = as.POSIXlt(Temperature))
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE, colClasses = c("V3" = "POSIXct"))
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
str(d)
ggplot(d,aes(x=Time,y=Temperature)) + geom_point() + stat_smooth(method="lm")
library(ggplot2)
ggplot(d,aes(x=Time,y=Temperature)) + geom_point() + stat_smooth(method="lm")
ggplot(d,aes(x=Time,y=Temperature)) + geom_point() + stat_smooth(method="lm")
ggplot(d,aes(Time,Temperature)) + geom_point() + stat_smooth(method="lm")
ggplot(d,aes(Time,Temperature)) + geom_point() + stat_smooth()
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + stat_smooth(method="lm")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + stat_smooth(method="loess")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth()
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_date(date_minor_breaks = "3 hours")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_date(date_minor_breaks = "3 hour")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_datetime(date_minor_breaks = "3 hours")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_time(date_minor_breaks = "3 hours")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_datetime(date_minor_breaks = "3 hours")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_datetime(minor_breaks = "3 hours")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_datetime(date_breaks = "3 hours")
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_datetime(date_breaks = "3 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(d,aes(Time,Temperature)) + geom_point(alpha = 0.1) + geom_smooth() + scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(d,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=-90, hjust=1))
scale_x_datetime(date_breaks = "24 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(d,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_datetime(date_breaks = "24 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(d,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE, colClasses = c("V3" = "POSIXct"))
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
ggplot(d,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
d = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE, colClasses = c("V3" = "POSIXct"))
d = d %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
ggplot(d,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
ggplot(d,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth(method="loess") +
scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
df = read.csv("temparature-cave.txt", sep = "\t", skip=23, encoding="UTF-8", header = FALSE, colClasses = c("V3" = "POSIXct"))
df = df %>% select(V1, V3, V5, V7) %>% rename(c("V1" = "SampleNumber", "V3" = "Time", "V5" = "Temperature", "V7" = "Humidity"))
ggplot(df,aes(Time,Temperature)) +
geom_point(alpha = 0.1) +
geom_smooth(method="loess") +
scale_x_datetime(date_breaks = "6 hours") + theme(axis.text.x=element_text(angle=90, hjust=1))
